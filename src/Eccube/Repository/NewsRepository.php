<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) LOCKON CO.,LTD. All Rights Reserved.
 *
 * http://www.lockon.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eccube\Repository;

use Doctrine\DBAL\Exception\DriverException;
use Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException;
use Eccube\Entity\News;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends AbstractRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, News::class);
    }

    /**
     * 新着情報の表示順を1上げる.
     *
     * @param News $News
     *
     * @throws \Exception 更新対象の新着情報より上位の新着情報が存在しない場合.
     */
    public function up(News $News)
    {
        $sortNo = $News->getSortNo();
        $News2 = $this->findOneBy(['sort_no' => $sortNo + 1]);

        if (!$News2) {
            throw new \Exception(sprintf('%s より上位の新着情報が存在しません.', $News->getId()));
        }

        $News->setSortNo($sortNo + 1);
        $News2->setSortNo($sortNo);

        $em = $this->getEntityManager();
        $em->flush([$News, $News2]);
    }

    /**
     * 新着情報の表示順を1下げる.
     *
     * @param News $News
     *
     * @throws \Exception \Exception 更新対象の新着情報より上位の新着情報が存在しない場合.
     */
    public function down(News $News)
    {
        $sortNo = $News->getSortNo();
        $News2 = $this->findOneBy(['sort_no' => $sortNo - 1]);

        if (!$News2) {
            throw new \Exception();
        }

        $News->setSortNo($sortNo - 1);
        $News2->setSortNo($sortNo);

        $em = $this->getEntityManager();
        $em->flush([$News, $News2]);
    }

    /**
     * 新着情報を登録します.
     *
     * @param $News
     */
    public function save($News)
    {
        if (!$News->getId()) {
            $sortNo = $this->createQueryBuilder('n')
                ->select('COALESCE(MAX(n.sort_no), 0)')
                ->getQuery()
                ->getSingleScalarResult();
            $News
                ->setSortNo($sortNo + 1);
        }

        $em = $this->getEntityManager();
        $em->persist($News);
        $em->flush($News);
    }

    /**
     * 新着情報を削除します.
     *
     * @param News $News
     *
     * @throws ForeignKeyConstraintViolationException 外部キー制約違反の場合
     * @throws DriverException SQLiteの場合, 外部キー制約違反が発生すると, DriverExceptionをthrowします.
     */
    public function delete($News)
    {
        $this->createQueryBuilder('n')
            ->update()
            ->set('n.sort_no', 'n.sort_no - 1')
            ->where('n.sort_no > :sort_no')
            ->setParameter('sort_no', $News->getSortNo())
            ->getQuery()
            ->execute();

        $em = $this->getEntityManager();
        $em->remove($News);
        $em->flush($News);
    }

    /**
     * @return array
     */
    public function getList()
    {
        $qb = $this->createQueryBuilder('n');
        $qb->where('n.publish_date <= :date')
            ->setParameter('date', new \DateTime())
            ->orderBy('n.sort_no', 'DESC');

        return $qb->getQuery()->getResult();
    }
}

<?php
/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) 2000-2015 LOCKON CO.,LTD. All Rights Reserved.
 *
 * http://www.lockon.co.jp/
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */


namespace Eccube\Repository\Master;

use Doctrine\ORM\EntityRepository;

/**
 * ConstantRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConstantRepository extends EntityRepository
{
    /**
     * getAll
     * configにEC-CUBE2の設定を入れる。暫定メソッド。
     *
     * @param array $config 設定
     * @return array
     */
    public function getAll($config)
    {
        $return = array();

        if (!defined('HTML_REALDIR')) {
            define('HTML_REALDIR', $_SERVER['DOCUMENT_ROOT'] . $config['root']);
        }
        if (!defined('HTML2DATA_DIR')) {
            define('HTML2DATA_DIR', '../app/');
        }
        if (!defined('DATA_REALDIR')) {
            define('DATA_REALDIR', HTML_REALDIR . HTML2DATA_DIR);
        }
        if (!defined('DIR_INDEX_PATH')) {
            define('DIR_INDEX_PATH', '');
        }

        require_once __DIR__ . '/../../../../app/config/eccube/config.php';
        require_once __DIR__ . '/../../../../app/mtb_constants_init.php';

        /* @var $Constants \Eccube\Entity\Master\Constant[] */
        $Constants = $this->findAll();
        foreach ($Constants as $Constant) {
            $return[strtolower($Constant->getId())] = eval('return ' . $Constant->getName() . ';');
        }

        return $return;
    }
}

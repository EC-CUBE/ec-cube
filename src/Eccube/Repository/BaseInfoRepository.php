<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) LOCKON CO.,LTD. All Rights Reserved.
 *
 * http://www.lockon.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eccube\Repository;

use Eccube\Entity\BaseInfo;
use Symfony\Bridge\Doctrine\RegistryInterface;
use Symfony\Component\HttpKernel\KernelInterface;

/**
 * BaseInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BaseInfoRepository extends AbstractRepository
{
    /**
     * @var  KernelInterface
     */
    protected $kernel;

    /**
     * BaseInfoRepository constructor.
     *
     * @param RegistryInterface $registry
     * @param KernelInterface $kernel
     */
    public function __construct(RegistryInterface $registry, KernelInterface $kernel)
    {
        parent::__construct($registry, BaseInfo::class);
        $this->kernel = $kernel;
    }

    /**
     * @param int $id
     *
     * @return BaseInfo
     *
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function get($id = 1)
    {
        $qb = $this->createQueryBuilder('e')
            ->where('e.id = :id')
            ->setParameter('id', $id);

        if (!$this->kernel->isDebug()) {
            $qb->setCacheable(true);
        }

        return $qb->getQuery()
            ->useResultCache(true, $this->getCacheLifetime())
            ->getSingleResult();
    }
}

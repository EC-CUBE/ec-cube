<?php
/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) 2000-2015 LOCKON CO.,LTD. All Rights Reserved.
 *
 * http://www.lockon.co.jp/
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */


namespace Eccube\Repository;

use Eccube\Annotation\Repository;
use Eccube\Entity\MailTemplate;
use Symfony\Component\Filesystem\Filesystem;
use Eccube\Annotation\Inject;

/**
 * MailTemplateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @Repository
 */
class MailTemplateRepository extends AbstractRepository
{
    
    /**
     * @Inject("config")
     * @var array
     */
    protected $appConfig;
    
    /**
     * @deprecated 呼び出し元で制御する
     * @param $id
     * @return MailTemplate|null|object
     */
    public function findOrCreate($id)
    {
        if ($id == 0) {
            $MailTemplate = new MailTemplate();
        } else {
            $MailTemplate = $this->find($id);

        }

        return $MailTemplate;
    }
    
    /**
     * 書き込みパスの取得
     *
     * @param  boolean $isUser
     * @return string
     */
    public function getWriteTemplatePath()
    {
        return $this->appConfig['template_realdir'];
    }
    
    /**
     * 読み込みファイルの取得
     *
     * 1. template_realdir
     *      app/template/{template_code}
     * 2. template_default_readldir
     *      src/Eccube/Resource/template/default
     *
     * @param string $fileName
     *
     * @return array
     */
    public function getReadTemplateFile($fileName)
    {
        
        $readPaths = array(
            $this->appConfig['template_realdir'],
            $this->appConfig['template_default_realdir'],
        );
    
        foreach ($readPaths as $readPath) {
            $filePath = $readPath . '/' . $fileName;
            $fs = new Filesystem();
            if ($fs->exists($filePath)) {
                return array(
                    'file_name' => $fileName,
                    'tpl_data' => file_get_contents($filePath),
                );
            }
        }
    }
}

{
  "name": "yum",
  "version": "3.2.0",
  "description": "Configures various yum components on Red Hat-like systems",
  "long_description": "yum Cookbook\n============\n\nThe Yum cookbook exposes the `yum_globalconfig` and `yum_repository`\nresources that allows a user to both control global behavior and make\nindividual Yum repositories available for use. These resources aim to\nallow the user to configure all options listed in the `yum.conf` man\npage, found at http://linux.die.net/man/5/yum.conf\n\nNOTES\n-----\nWARNING: Yum cookbook version 3.0.0 and above contain non-backwards\ncompatible breaking changes and will not work with cookbooks written\nagainst the 2.x and 1.x series. Changes have been made to the\nyum_repository resource, and the yum_key resource has been eliminated\nentirely. Recipes have been eliminated and moved into their own\ncookbooks. Please lock yum to the 2.x series in your Chef environments\nuntil all dependent cookbooks have been ported.\n\nRequirements\n------------\n* Chef 11 or higher\n* Ruby 1.9 (preferably from the Chef full-stack installer)\n* RHEL5, RHEL6, or other platforms within the family\n\nResources/Providers\n-------------------\n### yum_repository\nThis resource manages a yum repository configuration file at\n/etc/yum.repos.d/`repositoryid`.repo. When the file needs to be\nrepaired, it calls yum-makecache so packages in the repo become\navailable to the next resource.\n\n#### Example\n``` ruby\n# add the Zenoss repository\nyum_repository 'zenoss' do\n  description \"Zenoss Stable repo\"\n  baseurl \"http://dev.zenoss.com/yum/stable/\"\n  gpgkey 'http://dev.zenoss.com/yum/RPM-GPG-KEY-zenoss'\n  action :create\nend\n\n# add the EPEL repo\nyum_repository 'epel' do\n  description 'Extra Packages for Enterprise Linux'\n  mirrorlist 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch'\n  gpgkey 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\n  action :create\nend\n```\n\n``` ruby\n# delete CentOS-Media repo\nyum_repository 'CentOS-Media' do\n  action :delete\nend\n```\n\n#### Actions\n- `:create` - creates a repository file and builds the repository listing\n- `:delete` - deletes the repository file\n\n#### Parameters\n* `baseurl` -  Must be a URL to the directory where the yum repository's\n  'repodata' directory lives. Can be an http://, ftp:// or file://\n  URL. You can specify multiple URLs in one baseurl statement.\n* `cost` - relative cost of accessing this repository. Useful for\n  weighing one repo's packages as greater/less than any other.\n  defaults to 1000\n* `description` - Maps to the 'name' parameter in a repository .conf.\n  Descriptive name for the repository channel. This directive must be\n  specified.\n* `enabled` - Either `true` or `false`. This tells yum whether or not use this repository.\n* `enablegroups` -  Either `true` or `false`. Determines whether yum\n  will allow the use of package groups for this repository. Default is\n  `true` (package groups are allowed).\n* `exclude` - List of packages to exclude from updates or installs. This\n  should be a space separated list in a single string. Shell globs using wildcards (eg. *\n  and ?) are allowed.\n* `failovermethod` - Either 'roundrobin' or 'priority'.\n* `fastestmirror_enabled` - Either `true` or `false`\n* `gpgcheck` - Either `true` or `false`. This tells yum whether or not\n  it should perform a GPG signature check on packages. When this is\n  set in the [main] section it sets the default for all repositories.\n  The default is `true`.\n* `gpgkey` - A URL pointing to the ASCII-armored GPG key file for the\n  repository. This option is used if yum needs a public key to verify\n  a package and the required key hasn't been imported into the RPM\n  database. If this option is set, yum will automatically import the\n  key from the specified URL.\n* `http_caching` - Either 'all', 'packages', or 'none'. Determines how\n  upstream HTTP caches are instructed to handle any HTTP downloads\n  that Yum does. Defaults to 'all'\n* `includepkgs` -  Inverse of exclude. This is a list of packages you\n  want to use from a repository. If this option lists only one package\n  then that is all yum will ever see from the repository. Defaults to\n  an empty list.\n* `keepalive` - Either `true` or `false`. This tells yum whether or not\n  HTTP/1.1 keepalive should be used with this repository.  \n* `max_retries` - Set the number of times any attempt to retrieve a file\n  should retry before returning an error. Setting this to '0' makes\n  yum try forever. Default is '10'.\n* `metadata_expire` - Time (in seconds) after which the metadata will\n  expire. So that if the current metadata downloaded is less than this\n  many seconds old then yum will not update the metadata against the\n  repository. If you find that yum is not downloading information on\n  updates as often as you would like lower the value of this option.\n  You can also change from the default of using seconds to using days,\n  hours or minutes by appending a d, h or m respectively. The default\n  is 6 hours, to compliment yum-updatesd running once an hour. It's\n  also possible to use the word \"never\", meaning that the metadata\n  will never expire. Note that when using a metalink file the metalink\n  must always be newer than the metadata for the repository, due to\n  the validation, so this timeout also applies to the metalink file.\n* `mirrorlist` - Specifies a URL to a file containing a list of\n  baseurls. This can be used instead of or with the baseurl option.\n  Substitution variables, described below, can be used with this\n  option. As a special hack is the mirrorlist URL contains the word\n  \"metalink\" then the value of mirrorlist is copied to metalink (if\n  metalink is not set)\n* `mirror_expire` - Time (in seconds) after which the mirrorlist locally\n  cached will expire. If the current mirrorlist is less than this many\n  seconds old then yum will not download another copy of the\n  mirrorlist, it has the same extra format as metadata_expire. If you\n  find that yum is not downloading the mirrorlists as often as you\n  would like lower the value of this option.\n* `mirrorlist_expire` - alias for mirror_expire\n* `priority` - When the yum-priorities plug-in is enabled, you set\n  priorities on repository entries, where N is an integer from 1 to 99. The\n  default priority for repositories is 99.\n* `proxy` - URL to the proxy server that yum should use.\n* `proxy_username` -  username to use for proxy\n* `proxy_password` - password for this proxy\n* `report_instanceid` - Report instance ID when using Amazon Linux AMIs\n  and repositories\n* `repositoryid` - Must be a unique name for each repository, one word.\n  Defaults to name attribute.\n* `source` - Use a custom template source instead of the default one\n  in the yum cookbook\n* `sslcacert` - Path to the directory containing the databases of the\n  certificate authorities yum should use to verify SSL certificates.\n  Defaults to none - uses system default\n* `sslclientcert` - Path to the SSL client certificate yum should use to\n  connect to repos/remote sites Defaults to none.  \n* `sslclientkey` - Path to the SSL client key yum should use to connect\n  to repos/remote sites Defaults to none.\n* `sslverify` - Either `true` or `false`. Determines if yum will verify SSL certificates/hosts. Defaults to `true`\n* `timeout` - Number of seconds to wait for a connection before timing\n  out. Defaults to 30 seconds. This may be too short of a time for\n  extremely overloaded sites.\n\n### yum_globalconfig\nThis renders a template with global yum configuration parameters. The\ndefault recipe uses it to render `/etc/yum.conf`. It is flexible\nenough to be used in other scenarios, such as building RPMs in\nisolation by modifying `installroot`. \n\n#### Example\n``` ruby\nyum_globalconfig '/my/chroot/etc/yum.conf' do\n  cachedir '/my/chroot/etc/yum.conf'\n  keepcache 'yes'\n  debuglevel '2'\n  installroot '/my/chroot'\n  action :create\nend\n```\n\n#### Parameters\n`yum_globalconfig` can take most of the same parameters as a\n`yum_repository`, plus more, too numerous to describe here. Below are\na few of the more commonly used ones. For a complete list, please\nconsult the `yum.conf` man page, found here:\nhttp://linux.die.net/man/5/yum.conf\n\n* `cachedir` - Directory where yum should store its cache and db\n  files. The default is '/var/cache/yum'.  \n* `keepcache` - Either `true` or `false`. Determines whether or not\n  yum keeps the cache of headers and packages after successful\n  installation. Default is `true` (keep files)\n* `debuglevel` - Debug message output level. Practical range is 0-10.\n  Default is '2'.  \n* `exclude` - List of packages to exclude from updates or installs.\n  This should be a space separated list. Shell globs using wildcards\n  (eg. * and ?) are allowed.  \n* `installonlypkgs` = List of package provides that should only ever\n  be installed, never updated. Kernels in particular fall into this\n  category. Defaults to kernel, kernel-bigmem, kernel-enterprise,\n  kernel-smp, kernel-debug, kernel-unsupported, kernel-source,\n  kernel-devel, kernel-PAE, kernel-PAE-debug.\n* `logfile` - Full directory and file name for where yum should write\n  its log file.\n* `exactarch` -  Either `true` or `false`. Set to `true` to make 'yum update' only\n  update the architectures of packages that you have installed. ie:\n  with this enabled yum will not install an i686 package to update an\n  x86_64 package. Default is `true`\n* `gpgcheck` - Either `true` or `false`. This tells yum whether or not\n  it should perform a GPG signature check on the packages gotten from\n  this repository.\n \nRecipes\n-------\n* `default` - Configures `yum_globalconfig[/etc/yum.conf]` with values\n  found in node attributes at `node['yum']['main']`\n\nAttributes\n----------\nThe following attributes are set by default\n\n``` ruby\ndefault['yum']['main']['cachedir'] = '/var/cache/yum/$basearch/$releasever'\ndefault['yum']['main']['keepcache'] = false\ndefault['yum']['main']['debuglevel'] = nil\ndefault['yum']['main']['exclude'] = nil\ndefault['yum']['main']['logfile'] = '/var/log/yum.log'\ndefault['yum']['main']['exactarch'] = nil\ndefault['yum']['main']['obsoletes'] = nil\ndefault['yum']['main']['installonly_limit'] = nil\ndefault['yum']['main']['installonlypkgs'] = nil\ndefault['yum']['main']['installroot'] = nil\n```\n\nRelated Cookbooks\n-----------------\nRecipes from older versions of this cookbook have been moved\nindividual cookbooks. Recipes for managing platform yum configurations\nand installing specific repositories can be found in one (or more!) of\nthe following cookbook.\n\n* yum-centos\n* yum-fedora\n* yum-amazon\n* yum-epel\n* yum-elrepo\n* yum-repoforge\n* yum-ius\n* yum-percona\n* yum-pgdg\n\nUsage\n-----\nPut `depends 'yum'` in your metadata.rb to gain access to the\nyum_repository resource.\n\nLicense & Authors\n-----------------\n- Author:: Eric G. Wolfe\n- Author:: Matt Ray (<matt@getchef.com>)\n- Author:: Joshua Timberman (<joshua@getchef.com>)\n- Author:: Sean OMeara (<someara@getchef.com>)\n\n```text\nCopyright:: 2011 Eric G. Wolfe\nCopyright:: 2013 Chef\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Chef",
  "maintainer_email": "cookbooks@getchef.com",
  "license": "Apache 2.0",
  "platforms": {
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "scientific": ">= 0.0.0",
    "amazon": ">= 0.0.0",
    "fedora": ">= 0.0.0"
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  }
}
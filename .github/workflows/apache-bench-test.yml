name: Apache bench (HTTP load speed) testing for EC-CUBE
on:
  schedule:
    - cron: '*/2 * * * *'
  push:
  workflow_dispatch:
jobs:
  load-test:
    name: Apache bench (HTTP load speed) testing for EC-CUBE
    runs-on: ubuntu-latest
    steps:
      # POSTGRES SQL
      ## 4.1
      - name: Checkout 4.1 Branch (POSTGRES)
        uses: actions/checkout@master
        with:
          ref: "4.1"
      - name: Start Load EC-CUBE
        run: |
          sed -i 's!APP_ENV: "dev"!APP_ENV: "prod"!g' docker-compose.yml
          docker-compose -f docker-compose.yml -f docker-compose.bench.pgsql.yml up -d
      - name: Wait 2 minutes for the database to load, (as I do not know the databases active state)
        run: sleep 120s
        shell: bash
      - name: Request home page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -l http://localhost:8080/ > pg-4.1-home.txt
          PG_4_1_HOME="$(tail -n +23 pg-4.1-home.txt | grep -o -P '(?<=:).*(?=\[ms\])')"
          echo $PG_4_1_HOME
      - name: Request list page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -l http://localhost:8080/products/list > pg-4.1-list.txt
          PG_4_1_LIST="$(tail -n +23 pg-4.1-list.txt | grep -o -P '(?<=:).*(?=\[ms\])')"
          echo $PG_4_1_LIST
        # Upload Evidence
      - name: Drop PGSQL ECCUBE for 4.1
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.bench.pgsql.yml down -v
      ## 4.2
      - name: Checkout 4.2 Branch (POSTGRES)
        uses: actions/checkout@master
        with:
          ref: "feature/ab_testing"
      - name: Start Load EC-CUBE on 4.2
        run: |
          sed -i 's!APP_ENV: "dev"!APP_ENV: "prod"!g' docker-compose.yml
          docker-compose -f docker-compose.yml -f docker-compose.bench.pgsql.yml up -d
      - name: Wait 2 minutes for the database to load, (as I do not know the databases active state)
        run: sleep 120s
        shell: bash
      - name: Request home page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -l http://localhost:8080/ > pg-4.2-home.txt
          PG_4_2_HOME="$(tail -n +23 pg-4.2-home.txt | grep -o -P '(?<=:).*(?=\[ms\])')"
          echo $PG_4_2_HOME
      - name: Request list page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -l http://localhost:8080/products/list > pg-4.2-list.txt
          PG_4_2_LIST="$(tail -n +23 pg-4.2-list.txt | grep -o -P '(?<=:).*(?=\[ms\])')"
          echo $PG_4_2_LIST
        # Upload Evidence
      - name: Drop PGSQL ECCUBE for 4.2
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.bench.pgsql.yml down -v
      ## MYSQL
      # 4.1
      - name: Checkout 4.1 Branch (MYSQL)
        uses: actions/checkout@master
        with:
          ref: "4.1"
      - name: Start Load EC-CUBE on 4.1
        run: |
          sed -i 's!APP_ENV: "dev"!APP_ENV: "prod"!g' docker-compose.yml
          docker-compose -f docker-compose.yml -f docker-compose.bench.mysql.yml up -d
      - name: Wait 2 minutes for the database to load, (as I do not know the databases active state)
        run: sleep 120s
        shell: bash
      - name: Request home page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -l http://localhost:8080/ > mysql-4.1-home.txt
          MY_4_1_HOME="$(tail -n +23 mysql-4.1-home.txt | grep -o -P '(?<=:).*(?=\[ms\])')"
          echo $MY_4_1_HOME
      - name: Request list page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -l http://localhost:8080/products/list > mysql-4.1-list.txt
          MY_4_1_LIST="$(tail -n +23 mysql-4.1-list.txt | grep -o -P '(?<=:).*(?=\[ms\])')"
          echo $MY_4_1_LIST
      - name: Drop MYSQL ECCUBE for 4.1
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.bench.mysql.yml down -v
      # 4.2
      - name: Checkout 4.2 Branch  (MYSQL)
        uses: actions/checkout@master
        with:
          ref: "feature/ab_testing"
      - name: Start Load EC-CUBE on 4.2
        run: |
          sed -i 's!APP_ENV: "dev"!APP_ENV: "prod"!g' docker-compose.yml
          docker-compose -f docker-compose.yml -f docker-compose.bench.mysql.yml up -d
      - name: Wait 2 minutes for the database to load, (as I do not know the databases active state)
        run: sleep 120s
        shell: bash
      - name: Request home page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -l http://localhost:8080/ > mysql-4.2-home.txt
          MY_4_2_HOME="$(tail -n +23 mysql-4.2-home.txt | grep -o -P '(?<=:).*(?=\[ms\])')"
          echo $MY_4_2_HOME
      - name: Request list page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -l http://localhost:8080/products/list > mysql-4.2-list.txt
          MY_4_2_LIST="$(tail -n +23 mysql-4.2-list.txt | grep -o -P '(?<=:).*(?=\[ms\])')"
          echo $MY_4_2_LIST
      - name: Drop MYSQL ECCUBE for 4.2
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.bench.mysql.yml down -v
      - name: Bundle Average Results to CSV
        run: |
          echo $PG_4_1_HOME, $PG_4_1_LIST, $PG_4_2_HOME, $PG_4_2_LIST, $MY_4_1_HOME, $MY_4_1_LIST, $MY_4_2_HOME, $MY_4_2_LIST >> total.csv
      # Upload Evidence
      ## FINALISE
      - env:
          GROUP: ${{ matrix.group }}
        if: always()
        run: echo "ARTIFACT_NAME=$(echo ${GROUP} | sed 's,/,-,g')" >> $GITHUB_ENV
      - name: Upload homepage evidence (4.1 - PGSQL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-4-1-pg-home-session
          path: pg-4.1-home.txt
      - name: Upload product list evidence (4.1 - PGSQL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-4-1-pg-list-session
          path: pg-4.1-list.txt
      - name: Upload homepage evidence (4.2 - PGSQL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-4-2-pg-home-session
          path: pg-4.2-home.txt
      - name: Upload product list evidence (4.2 - PGSQL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-4-2-pg-list-session
          path: pg-4.2-list.txt
      - name: Upload homepage evidence (4.1 - MYSQL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-4-1-mysql-home-session
          path: mysql-4.1-home.txt
      - name: Upload product list evidence (4.1 - MYSQL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-4-1-mysql-list-session
          path: mysql-4.1-list.txt
      - name: Upload homepage evidence (4.2 - MYSQL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-4-2-mysql-home-session
          path: mysql-4.2-home.txt
      - name: Upload product list evidence (4.2 - MYSQL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-4-2-mysql-list-session
          path: mysql-4.2-list.txt
      - name: Upload complete evidence (ALL)
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-complete
          path: total.csv


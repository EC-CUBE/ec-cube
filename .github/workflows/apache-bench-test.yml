name: Apache bench (HTTP load speed) testing for EC-CUBE
on:
  schedule:
    - cron: '*/2 * * * *'
  push:
  workflow_dispatch:
jobs:
  load-test:
    name: Apache bench (HTTP load speed) testing for EC-CUBE
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ 7.4 ]
        db: [ pgsql ]
        include:
          - db: pgsql
            database_url: postgres://postgres:password@127.0.0.1:5432/eccube_db
            database_server_version: 14
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mailcatcher:
        image: schickling/mailcatcher
        ports:
          - 1080:1080
          - 1025:1025
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup PHP
        uses: nanasess/setup-php@master
        with:
          php-version: '7.4'
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install to Composer
        run: composer install --no-scripts --no-dev --no-interaction --optimize-autoloader
      - name: Translate to templates
        run: php bin/template_jp.php
      - name: Setup to EC-CUBE
        env:
          APP_ENV: 'prod'
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/eccube_db
          DATABASE_SERVER_VERSION: 14
        run: |
          rm -rf $GITHUB_WORKSPACE/app/Plugin/*
          echo "APP_ENV=${APP_ENV}" > .env
          bin/console doctrine:database:create --env=dev
          bin/console doctrine:schema:create --env=dev
          bin/console eccube:fixtures:load --env=dev
        # Home Page Request
      - name: Start PHP Development Server
        env:
          APP_ENV: 'codeception'
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}
          MAILER_URL: 'smtp://127.0.0.1:1025'
          ECCUBE_PACKAGE_API_URL: 'http://127.0.0.1:8080'
          XDEBUG_MODE: coverage
        run: php -S 127.0.0.1:8000 &
      - name: Request home page
        run: |
          sudo apt-get install apache2-utils
          ab -n 100 -c 10 -g output.data http://127.0.0.1:8000/
        # Upload Evidence
      - env:
          GROUP: ${{ matrix.group }}
        if: always()
        run: echo "ARTIFACT_NAME=$(echo ${GROUP} | sed 's,/,-,g')" >> $GITHUB_ENV
      - name: Upload evidence
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ab-${{ env.ARTIFACT_NAME }}-session
          path: output.data

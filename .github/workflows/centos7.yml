name: CentOS7 on EC-CUBE
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths:
      - '**'
      - '!*.md'
  pull_request:
    paths:
      - '**'
      - '!*.md'
  release:
    types: [ published ]
jobs:
  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        db: [ mysql, pgsql ]
        include:
          - db: mysql
            database_url: mysql://root:password@localhost:3306/eccube_db
            database_server_version: 5.5
          - db: pgsql
            database_url: postgres://postgres:password@localhost:5432/eccube_db
            database_server_version: 9.2
    container:
      image: centos:7
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Setup
      run: |
        yum -y install epel-release
        yum -y install https://rpms.remirepo.net/enterprise/remi-release-7.rpm
        yum -y install mariadb-server mysql-devel postgresql-server httpd httpd-devel mod_ssl
        yum -y install --enablerepo=epel,remi,remi-safe,remi-php73 php-mbstring php-devel php-mhash php-pgsql php-mysql php-xml php-gd  php-intl php-curl php-zip php73-php-pecl-apcu php-opcache php-pecl-apcu
        yum -y install ruby ruby-devel sqlite-devel
        gem install mime-types -v 2.99.1
        gem install mailcatcher -v "0.6.5"
        mailcatcher &

    - name: Replace to systemctl
      ## see https://github.com/DDoSolitary/LxRunOffline/issues/88#issuecomment-525923925
      run: |
        mv /usr/bin/systemctl /usr/bin/systemctl.old
        curl https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py > /usr/bin/systemctl
        chmod +x /usr/bin/systemctl

    - name: Initialize Database
      run: |
        systemctl start mariadb.service
        su - postgres -c "initdb --no-locale -E utf8"
        sed -i "s/^#listen_addresses = 'localhost'/listen_addresses = '*'/" /var/lib/pgsql/data/postgresql.conf
        systemctl restart postgresql.service
        mysql --user=root -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION;FLUSH PRIVILEGES;"

    - name: Setup composer
      run: |
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php composer-setup.php
        php composer.phar install

    - name: Setup EC-CUBE
      env:
        DATABASE_URL: ${{ matrix.database_url }}
        DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}
      run: |
        bin/console doctrine:database:create
        bin/console doctrine:schema:create
        bin/console eccube:fixtures:load

    - name: PHPUnit
      env:
        APP_ENV: 'test'
        DATABASE_URL: ${{ matrix.database_url }}
        DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}
        MAILER_URL: 'smtp://localhost:1025'
      run: |
        bin/phpunit -dmemory_limit=-1 --exclude-group cache-clear,cache-clear-install,update-schema-doctrine
        bin/phpunit -dmemory_limit=-1 --group cache-clear
        bin/phpunit -dmemory_limit=-1 --group cache-clear-install
        bin/phpunit -dmemory_limit=-1 --group update-schema-doctrine --exclude-group update-schema-doctrine-install
        bin/phpunit -dmemory_limit=-1 --group update-schema-doctrine-install --filter=testInstallPluginWithNoProxy
        bin/phpunit -dmemory_limit=-1 --group update-schema-doctrine-install --filter=testInstallPluginWithProxy
        bin/phpunit -dmemory_limit=-1 --group update-schema-doctrine-install --filter=testEnablePluginWithNoProxy
        bin/phpunit -dmemory_limit=-1 --group update-schema-doctrine-install --filter=testEnablePluginWithProxy
        bin/phpunit -dmemory_limit=-1 --group update-schema-doctrine-install --filter=testDisablePluginWithNoProxy
        bin/phpunit -dmemory_limit=-1 --group update-schema-doctrine-install --filter=testDisablePluginWithProxy
        bin/phpunit -dmemory_limit=-1 --group update-schema-doctrine-install --filter=testCreateEntityAndTrait

name: Security Access testing for EC-CUBE (Apache)
on:
  pull_request:
  push:
jobs:
  load-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: docker build
        run: docker compose build
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Setup PHP
        uses: nanasess/setup-php@master
        with:
          php-version: 8.1
      - name: composer install
        run: composer install --dev --no-interaction -o --apcu-autoloader
      - name: Setup to EC-CUBE
        env:
          APP_ENV: dev
          DATABASE_URL: postgres://dbuser:secret@127.0.0.1:15432/eccubedb
          DATABASE_SERVER_VERSION: 14
        run: |
          docker compose -f docker-compose.yml -f docker-compose.pgsql.yml up -d --wait
      - name: Confirm safe pages exist and viewable without error
        run: |
          jq -r ".safe[]" .github/workflows/security-access-test/attack_vectors.json | while read -r i; do
            echo "Testing SAFE URL: http://localhost:8080/${i}..."
            safeResponse=$(curl -Is http://localhost:8080/${i} | head -1 | awk '{print $2}')
            if [ "$safeResponse" != "200" ]; then
              echo "FAILURE: http://localhost:8080/${i} returned ${safeResponse}"
              echo "FAILURE: http://localhost:8080/${i} returned ${safeResponse}" >> safe_files_issue.txt
            fi
          done
          if [ -e safe_files_issue.txt ]; then
              echo "FAILURE: Found erroneous requests in the SAFE urls."
              exit 1
          fi
      - name: HTTP Request security vulnerable pages
        run: |
          jq -r ".danger[]" .github/workflows/security-access-test/attack_vectors.json | while read -r i; do
            echo "Testing DANGER URL: http://localhost:8080/${i}..."
            dangerResponse=$(curl -Is http://localhost:8080/${i} | head -1 | awk '{print $2}')
            if [ "$dangerResponse" == "200" ]; then
              echo "Danger File visible!: ${i}"
              echo "Danger File visible!: ${i}" >> danger_files.txt
            fi
          done
          if [ -e danger_files.txt ]; then
            echo "FAILURE: Found vulnerable requests in the SAFE urls."
            exit 1
          else
            echo "NO VULNERABLE FILES FOUND VIA HTTP"
          fi
        # Upload Evidence
      - name: Upload evidence
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-result-${{ env.ARTIFACT_NAME }}-session
          path: |
            danger_files.txt
            safe_files_issue.txt

name: Deny check for EC-CUBE
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths:
      - '**'
      - '!*.md'
  pull_request:
    paths:
      - '**'
      - '!*.md'
jobs:
  deploy:
    name: Deny check
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup PHP
        uses: nanasess/setup-php@master
        with:
          php-version: '7.4'

      - name: Initialize Composer
        uses: ./.github/actions/composer

      - name: Translate to templates
        run: php bin/template_jp.php

      - name: Setup to EC-CUBE
        env:
          APP_ENV: 'prod'
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/eccube_db
          DATABASE_SERVER_VERSION: 14
        run: |
          rm -rf $GITHUB_WORKSPACE/app/Plugin/*
          echo "APP_ENV=${APP_ENV}" > .env
          bin/console doctrine:database:create --env=dev
          bin/console doctrine:schema:create --env=dev
          bin/console eccube:fixtures:load --env=dev

      - name: Install Plugins
        env:
          APP_ENV: 'prod'
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/eccube_db
          DATABASE_SERVER_VERSION: 14
        run: |
          bin/console eccube:composer:require "ec-cube/recommend42"
          bin/console eccube:composer:require "ec-cube/coupon42"
          bin/console eccube:composer:require "ec-cube/mailmagazine42"
          bin/console eccube:composer:require "ec-cube/salesreport42"
          bin/console eccube:composer:require "ec-cube/relatedproduct42"
          bin/console eccube:composer:require "ec-cube/securitychecker42"
          bin/console eccube:composer:require "ec-cube/productreview42"
          bin/console eccube:composer:require "ec-cube/api42"
          bin/console eccube:composer:require "ec-cube/sitekit42"

      - name: Pre Install Plugins
        env:
          PGPASSWORD: 'password'
        run: psql eccube_db -h 127.0.0.1 -U postgres -c "select id,name,code,0 as enabled,version,source,0 as initialized,'2021-08-13 00:00:00' as create_date,'2021-08-13 00:00:00' as update_date,discriminator_type from dtb_plugin;" -A -F, --pset footer > src/Eccube/Resource/doctrine/import_csv/ja/dtb_plugin.csv

      - name: Packaging
        working-directory: ../
        run: ${{ github.event.repository.name }}/package.sh

      - name: Build Container
        run: docker build -t ec-cube .

      - name: Container Run
        run: |
          docker run -e APP_ENV=prod -e APP_DEBUG=0 -e DATABASE_URL="sqlite:///var/eccube.db" -e DATABASE_SERVER_VERSION=3 --rm -d -p 8080:80 --name eccube ec-cube
          echo -n $(docker inspect -f {{.State.Health.Status}} eccube)
          until [ $(docker inspect -f {{.State.Health.Status}} eccube) != "starting" ]; do
            echo -n .
            sleep 10;
          done;
          docker inspect -f {{.State.Health.Status}} eccube
          docker cp ../eccube.tar.gz eccube:/tmp/
          docker exec -w /tmp eccube bash -c "rm -rf /var/www/html; tar xf /tmp/eccube.tar.gz -C /var/www; mv /var/www/ec-cube /var/www/html; chown -R www-data: /var/www/html"
          docker exec -u www-data eccube bin/console eccube:install -n
          docker exec -u www-data eccube bash -c 'for code in Api42 Coupon42 MailMagazine42 ProductReview42 Recommend42 RelatedProduct42 SalesReport42 Securitychecker42 SiteKit42; do bin/console eccube:plugin:enable --code $code; done'

      - name: setup-chromedriver
        uses: nanasess/setup-chromedriver@master

      - name: Prepare test
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          echo ">>> Started chrome-driver"
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          echo ">>> Started xvfb"
          composer install --no-scripts --no-interaction --optimize-autoloader
          echo "modules:
              enabled:
              - REST:
                  depends: PhpBrowser
                  url: 'http://127.0.0.1:8080'
              config:
                  WebDriver:
                      host: '127.0.0.1'
                      port: 9515
                      url: 'http://127.0.0.1:8080'" > codeception/_envs/local.yml

      - name: Run tests
        env:
          APP_ENV: 'codeception'
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/eccube_db
          DATABASE_SERVER_VERSION: 14
        run: |
          vendor/bin/codecept -vvv run acceptance --env chrome,local CL01DenyCest

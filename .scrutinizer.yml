#https://scrutinizer-ci.com/docs/configuration/build_status
build_failure_conditions:
    # 現実でない部分をコメントアウト
    #- 'elements.rating(<= D).exists'               # No classes/methods with a rating of D or worse
    - 'elements.rating(<= D).new.exists'           # No new classes/methods with a rating of D or worse
    # allowed (useful for legacy code)

    #- 'issues.label("coding-style").exists'        # No coding style issues allowed
    #- 'issues.label("coding-style").new.exists'    # No new coding style issues allowed

    - 'issues.label("coding-style").new.count > 5' # More than 5 new coding style issues.
    - 'issues.severity(>= MAJOR).new.exists'       # New issues of major or higher severity

    - 'project.metric("scrutinizer.quality", < 6)' # Code Quality Rating drops below 6
    #- 'project.metric("scrutinizer.test_coverage", < 0.60)' # Code Coverage drops below 60%

      # Code Coverage decreased from previous inspection
    #- 'project.metric_change("scrutinizer.test_coverage", < 0)'

      # Code Coverage decreased from previous inspection by more than 10%
    # - 'project.metric_change("scrutinizer.test_coverage", < -0.10)'

filter:
    paths: ["src/*", "codeception/*"]
    excluded_paths:
        - 'app/*'
        - 'tests/*'
        - 'var/*'
    dependency_paths:
        - vendor/
checks:
    php:
        fix_use_statements:
            remove_unused: true
            preserve_multiple: false
            preserve_blanklines: true
            order_alphabetically: true
coding_style:
    php:
        indentation:
            general:
                use_tabs: false
                size: 4
            switch:
                indent_case: true
        spaces:
            general:
                linefeed_character: newline
            before_parentheses:
                function_declaration: false
                closure_definition: true
                function_call: false
                if: true
                for: true
                while: true
                switch: true
                catch: true
                array_initializer: false
            around_operators:
                assignment: true
                logical: true
                equality: true
                relational: true
                bitwise: true
                additive: true
                multiplicative: true
                shift: true
                unary_additive: false
                concatenation: false
                negation: false
            before_left_brace:
                class: true
                function: true
                if: true
                else: true
                for: true
                while: true
                do: true
                switch: true
                try: true
                catch: true
                finally: true
            before_keywords:
                else: true
                while: true
                catch: true
                finally: true
            within:
                brackets: false
                array_initializer: false
                grouping: false
                function_call: false
                function_declaration: false
                if: false
                for: false
                while: false
                switch: false
                catch: false
                type_cast: false
            ternary_operator:
                before_condition: true
                after_condition: true
                before_alternative: true
                after_alternative: true
                in_short_version: false
            other:
                before_comma: false
                after_comma: true
                before_semicolon: false
                after_semicolon: true
                after_type_cast: true
        braces:
            classes_functions:
                class: undefined
                function: undefined
                closure: undefined
            if:
                opening: undefined
                always: true
                else_on_new_line: false
            for:
                opening: undefined
                always: true
            while:
                opening: undefined
                always: true
            do_while:
                opening: undefined
                always: true
                while_on_new_line: false
            switch:
                opening: undefined
            try:
                opening: undefined
                catch_on_new_line: false
                finally_on_new_line: false
        upper_lower_casing:
            keywords:
                general: undefined
            constants:
                true_false_null: undefined

tools:
    # Runs the JSHint static analysis tool (https://scrutinizer-ci.com/docs/tools/javascript/jshint/)
    js_hint:
        config:
            boss: true
            curly: true
            eqeqeq: true
            eqnull: true
            es3: true
            expr: true
            immed: true
            noarg: true
            onevar: true
            quotmark: single
            trailing: true
            undef: true
            unused: true
            browser: true
            globals: { _: false, Backbone: false, jQuery: false, eccube: false }

    external_code_coverage: false
        # runs: 1
        # timeout: 3600

    #php_code_sniffer:
    #    enabled: true
    #    config:
    #        standard: PSR2

    php_cpd:
        enabled: false

    php_cs_fixer:
        enabled: true
        config:
            level: all

    php_loc:
        enabled: true

    php_mess_detector:
        enabled: true

    php_pdepend:
        enabled: true

    php_analyzer:
        enabled: true

    sensiolabs_security_checker: true

# for travis-ci
# see also. https://travis-ci.org
git:
  submodules: false

sudo: required

language: php

addons:
  apt:
    sources:
      - google-chrome
    packages:
      - google-chrome-stable

cache:
  directories:
    - vendor
    - $HOME/.composer/cache
    - bin/.phpunit

php:
  - 7.2

## see https://github.com/symfony/symfony/blob/e0bdc0c35e9afdb3bee8af172f90e9648c4012fc/.travis.yml#L92-L97
before_install: &php_setup |
  phpenv config-rm xdebug.ini || true
  echo "opcache.enable_cli=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  echo "apc.enable_cli=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

install:
  - &composer_install composer install --dev --no-interaction -o --apcu-autoloader

eccube_setup: &eccube_setup |
  echo "APP_ENV=codeception" > .env
  bin/console doctrine:database:create
  bin/console doctrine:schema:create
  bin/console eccube:fixtures:load

jobs:
  fast_finish: true
  allow_failures:
    - env: DATABASE_URL=sqlite:///%kernel.project_dir%/var/eccube.db DATABASE_SERVER_VERSION=3 COVERAGE=1
  include:
    - stage: Inspection
      php: 7.1
      env: DATABASE_URL=postgres://postgres:password@localhost/cube4_dev DATABASE_SERVER_VERSION=9
      script: vendor/bin/php-cs-fixer fix --config=.php_cs.dist --dry-run
    - &unit_test
      stage: Unit Test
      before_install:
        - *php_setup
        - gem install mailcatcher
      install:
        - *composer_install
        - *eccube_setup
      env: DATABASE_URL=mysql://root:@localhost/cube4_dev DATABASE_SERVER_VERSION=5
      script:
        - ./bin/phpunit --exclude-group cache-clear
        - ./bin/phpunit --group cache-clear
    - <<: *unit_test
      env: DATABASE_URL=postgres://postgres:password@localhost/cube4_dev DATABASE_SERVER_VERSION=9
    - &e2e_test
      stage: E2E Test
      before_install:
        - *php_setup
        - export DISPLAY=:99.0
        - sh -e /etc/init.d/xvfb start
        - wget -c -nc --retry-connrefused --tries=0 http://chromedriver.storage.googleapis.com/2.37/chromedriver_linux64.zip
        - unzip -o -q chromedriver_linux64.zip
        - sudo mv -f ./chromedriver /usr/local/bin/
        - sudo chmod +x /usr/local/bin/chromedriver
        - gem install mailcatcher
      install:
        - *composer_install
        - *eccube_setup
      env: GROUP=admin01 APP_ENV=codeception DATABASE_URL=postgres://postgres:password@localhost/eccube_db DATABASE_SERVER_VERSION=9 MAILER_URL=smtp://localhost:1025
      script: ./codeception.sh -g ${GROUP}
    - <<: *e2e_test
      env: GROUP=admin02 APP_ENV=codeception DATABASE_URL=postgres://postgres:password@localhost/eccube_db DATABASE_SERVER_VERSION=9 MAILER_URL=smtp://localhost:1025
    - <<: *e2e_test
      env: GROUP=admin03 APP_ENV=codeception DATABASE_URL=postgres://postgres:password@localhost/eccube_db DATABASE_SERVER_VERSION=9 MAILER_URL=smtp://localhost:1025
    - <<: *e2e_test
      env: GROUP=front APP_ENV=codeception DATABASE_URL=postgres://postgres:password@localhost/eccube_db DATABASE_SERVER_VERSION=9 MAILER_URL=smtp://localhost:1025
    - &coverage
      stage: Code Coverage
      env: DATABASE_URL=sqlite:///%kernel.project_dir%/var/eccube.db DATABASE_SERVER_VERSION=3 COVERAGE=1
      before_install:
        - *php_setup
        - gem install mailcatcher
      install:
        - *composer_install
        - *eccube_setup
      script:
        - docker run -e DATABASE_URL=sqlite:////usr/src/myapp/var/eccube.db -v "$PWD":/usr/src/myapp:cached -w /usr/src/myapp --rm nanasess/phpdbg phpdbg -qrr -dmemory_limit=-1 ./bin/phpunit --exclude-group cache-clear --coverage-clover=coverage.clover
      after_success:
        - sed -i.bak -e 's|/usr/src/myapp/||g' coverage.clover
        - php vendor/bin/php-coveralls -v -x coverage.clover
      after_script:
        - wget https://scrutinizer-ci.com/ocular.phar
        - php ocular.phar code-coverage:upload --format=php-clover coverage.clover

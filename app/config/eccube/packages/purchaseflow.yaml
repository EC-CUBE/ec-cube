services:

    # Purchase Flow for Cart
    eccube.purchase.flow.cart:
        class: Eccube\Service\PurchaseFlow\PurchaseFlow
        calls:
            - [ setFlowType, [ 'cart' ] ]

    # Purchase Flow for Shopping
    eccube.purchase.flow.shopping:
        class: Eccube\Service\PurchaseFlow\PurchaseFlow
        calls:
            - [ setFlowType, [ 'shopping' ] ]

    # Purchase Flow for Order
    eccube.purchase.flow.order:
        class: Eccube\Service\PurchaseFlow\PurchaseFlow
        calls:
            - [ setFlowType, [ 'order' ] ]


    # addItemValidator
    eccube.purchase.flow.item.validator.delivery.setting.validator: # 配送設定のチェック
        class: Eccube\Service\PurchaseFlow\Processor\DeliverySettingValidator
        arguments:
            - '@Eccube\Repository\DeliveryRepository'
        tags:
            - { name: eccube.item.validator, flow_type: cart, priority: 100 }
            - { name: eccube.item.validator, flow_type: shopping, priority: 100 }

    eccube.purchase.flow.item.validator.product.status.validator: # 商品の公開状態のチェック
        class: Eccube\Service\PurchaseFlow\Processor\ProductStatusValidator
        tags:
            - { name: eccube.item.validator, flow_type: cart, priority: 90 }
            - { name: eccube.item.validator, flow_type: shopping, priority: 90 }

    eccube.purchase.flow.item.validator.price.change.validator: # 商品価格の変更検知
        class: Eccube\Service\PurchaseFlow\Processor\PriceChangeValidator
        tags:
            - { name: eccube.item.validator, flow_type: cart, priority: 80 }
            - { name: eccube.item.validator, flow_type: shopping, priority: 80 }

    eccube.purchase.flow.item.validator.stock.validator: # 在庫のチェック
        class: Eccube\Service\PurchaseFlow\Processor\StockValidator
        tags:
            - { name: eccube.item.validator, flow_type: cart, priority: 70 }

    eccube.purchase.flow.item.validator.sale.limit.validator: # 販売制限数のチェック
        class: Eccube\Service\PurchaseFlow\Processor\SaleLimitValidator
        tags:
            - { name: eccube.item.validator, flow_type: cart, priority: 60 }

    eccube.purchase.flow.item.validator.class_category.validator: # 販売制限数のチェック
        class: Eccube\Service\PurchaseFlow\Processor\ClassCategoryValidator
        tags:
            - { name: eccube.item.validator, flow_type: cart, priority: 50 }
            - { name: eccube.item.validator, flow_type: shopping, priority: 50 }

    # addItemHolderValidator
    eccube.purchase.flow.item.holder.validator.stock.multiple.validator:
        class: Eccube\Service\PurchaseFlow\Processor\StockMultipleValidator
        arguments:
            - '@Eccube\Repository\ProductClassRepository'
        tags:
            - { name: eccube.item.holder.validator, flow_type: shopping, priority: 100 }

    eccube.purchase.flow.item.holder.validator.sale.limit.multiple.validator:
        class: Eccube\Service\PurchaseFlow\Processor\SaleLimitMultipleValidator
        arguments:
            - '@Eccube\Repository\ProductClassRepository'
        tags:
            - { name: eccube.item.holder.validator, flow_type: shopping, priority: 90 }

    eccube.purchase.flow.item.holder.validator.empty.items.validator: # 空明細の削除処理
        class: Eccube\Service\PurchaseFlow\Processor\EmptyItemsValidator
        arguments:
            - '@doctrine.orm.default_entity_manager'
        tags:
            - { name: eccube.item.holder.validator, flow_type: cart, priority: 100 }
            - { name: eccube.item.holder.validator, flow_type: shopping, priority: 80 }

    eccube.purchase.flow.item.holder.validator.stock.diff.processor:
        class: Eccube\Service\PurchaseFlow\Processor\StockDiffProcessor
        arguments:
            - '@Eccube\Repository\ProductClassRepository'
        tags:
            - { name: eccube.item.holder.validator, flow_type: order, priority: 100 }

    eccube.purchase.flow.item.holder.validator.point.diff.processor:
        class: Eccube\Service\PurchaseFlow\Processor\PointDiffProcessor
        arguments:
            - '@doctrine.orm.default_entity_manager'
            - '@Eccube\Service\PointHelper'
        tags:
            - { name: eccube.item.holder.validator, flow_type: order, priority: 90 }

    # addItemPreprocessor

    # addItemHolderPreprocessor
    eccube.purchase.flow.item.holder.preprocessor.tax.processor.before: # 税額の計算(商品明細に対して税額計算)
        class: Eccube\Service\PurchaseFlow\Processor\TaxProcessor
        arguments:
            - '@doctrine.orm.default_entity_manager'
            - '@Eccube\Repository\TaxRuleRepository'
            - '@Eccube\Service\TaxRuleService'
            - '@Eccube\Service\OrderHelper'
        tags:
            - { name: eccube.item.holder.preprocessor, flow_type: shopping, priority: 100 }
            - { name: eccube.item.holder.preprocessor, flow_type: order, priority: 100 }

    eccube.purchase.flow.item.holder.preprocessor.order.no.processor:
        class: Eccube\Service\PurchaseFlow\Processor\OrderNoProcessor
        arguments:
            - '@Eccube\Common\EccubeConfig'
            - '@Eccube\Repository\OrderRepository'
        tags:
            - { name: eccube.item.holder.preprocessor, flow_type: shopping, priority: 90 }

    eccube.purchase.flow.item.holder.preprocessor.delivery.fee.preprocessor:
        class: Eccube\Service\PurchaseFlow\Processor\DeliveryFeePreprocessor
        arguments:
            - '@Eccube\Repository\BaseInfoRepository'
            - '@doctrine.orm.default_entity_manager'
            - '@Eccube\Repository\TaxRuleRepository'
            - '@Eccube\Repository\DeliveryFeeRepository'
        tags:
            - { name: eccube.item.holder.preprocessor, flow_type: shopping, priority: 80 }

    eccube.purchase.flow.item.holder.preprocessor.delivery.fee.free.by.shipping.preprocessor:
        class: Eccube\Service\PurchaseFlow\Processor\DeliveryFeeFreeByShippingPreprocessor
        arguments:
            - '@Eccube\Repository\BaseInfoRepository'
        tags:
            - { name: eccube.item.holder.preprocessor, flow_type: shopping, priority: 70 }

    eccube.purchase.flow.item.holder.preprocessor.pyament.charge.preprocessor:
        class: Eccube\Service\PurchaseFlow\Processor\PaymentChargePreprocessor
        arguments:
            - '@Eccube\Repository\Master\OrderItemTypeRepository'
            - '@Eccube\Repository\Master\TaxDisplayTypeRepository'
            - '@Eccube\Repository\Master\TaxTypeRepository'
        tags:
            - { name: eccube.item.holder.preprocessor, flow_type: shopping, priority: 50 }

    eccube.purchase.flow.item.holder.preprocessor.tax.processor.after: # 税額の計算(送料明細・手数料明細に対して税額を計算)
        class: Eccube\Service\PurchaseFlow\Processor\TaxProcessor
        arguments:
            - '@doctrine.orm.default_entity_manager'
            - '@Eccube\Repository\TaxRuleRepository'
            - '@Eccube\Service\TaxRuleService'
            - '@Eccube\Service\OrderHelper'
        tags:
            - { name: eccube.item.holder.preprocessor, flow_type: shopping, priority: 40 }

    # addDiscountProcessor
    eccube.purchase.flow.discount.processor.point.processor:
        class: Eccube\Service\PurchaseFlow\Processor\PointProcessor
        arguments:
            - '@doctrine.orm.default_entity_manager'
            - '@Eccube\Service\PointHelper'
        tags:
            - { name: eccube.discount.processor, flow_type: shopping, priority: 100 }
            - { name: eccube.discount.processor, flow_type: order, priority: 100 }

    # addItemHolderPostValidator
    eccube.purchase.flow.item.holder.post.validator.point.rate.validator: # 明細にポイント付与率を設定する
        class: Eccube\Service\PurchaseFlow\Processor\PointRateProcessor
        arguments:
            - '@Eccube\Repository\BaseInfoRepository'
        tags:
            - { name: eccube.item.holder.post.validator, flow_type: shopping, priority: 100 }

    eccube.purchase.flow.item.holder.post.validator.add.point.validator: # 加算ポイントの計算
        class: Eccube\Service\PurchaseFlow\Processor\AddPointProcessor
        arguments:
            - '@Eccube\Repository\BaseInfoRepository'
        tags:
            - { name: eccube.item.holder.post.validator, flow_type: shopping, priority: 90 }
            - { name: eccube.item.holder.post.validator, flow_type: order, priority: 100 }

    eccube.purchase.flow.item.holder.post.validator.payment.validator: # 使用できない支払い方法が含まれていないかどうか
        class: Eccube\Service\PurchaseFlow\Processor\PaymentValidator
        arguments:
            - '@Eccube\Repository\DeliveryRepository'
        tags:
            - { name: eccube.item.holder.post.validator, flow_type: cart, priority: 100 }
            - { name: eccube.item.holder.post.validator, flow_type: shopping, priority: 80 }

    eccube.purchase.flow.item.holder.post.validator.payment.total.limit.validator: # 支払金額の上限チェック
        class: Eccube\Service\PurchaseFlow\Processor\PaymentTotalLimitValidator
        arguments:
            - '@Eccube\Common\EccubeConfig'
        tags:
            - { name: eccube.item.holder.post.validator, flow_type: cart, priority: 90 }
            - { name: eccube.item.holder.post.validator, flow_type: shopping, priority: 70 }
            - { name: eccube.item.holder.post.validator, flow_type: order, priority: 90 }

    eccube.purchase.flow.item.holder.post.validator.total.negative.validator: # 支払金額のマイナスチェック
        class: Eccube\Service\PurchaseFlow\Processor\PaymentTotalNegativeValidator
        tags:
            - { name: eccube.item.holder.post.validator, flow_type: cart, priority: 80 }
            - { name: eccube.item.holder.post.validator, flow_type: shopping, priority: 60 }
            - { name: eccube.item.holder.post.validator, flow_type: order, priority: 80 }

    eccube.purchase.flow.item.holder.post.validator.payment.charge.change.validator: # 手数料の変更検知
        class: Eccube\Service\PurchaseFlow\Processor\PaymentChargeChangeValidator
        tags:
            - { name: eccube.item.holder.post.validator, flow_type: shopping, priority: 50 }

    eccube.purcahse.flow.item.holder.post.validator.delivery.fee.change.validator: # 送料の変更検知
        class: Eccube\Service\PurchaseFlow\Processor\DeliveryFeeChangeValidator
        tags:
            - { name: eccube.item.holder.post.validator, flow_type: shopping, priority: 40 }

    eccube.purcahse.flow.item.holder.post.validator.tax.rate.change.validator: # 税率の変更検知
        class: Eccube\Service\PurchaseFlow\Processor\TaxRateChangeValidator
        tags:
            - { name: eccube.item.holder.post.validator, flow_type: shopping, priority: 30 }

    # addPurchaseProcessor
    eccybe.purchase.flow.purchase.processor.pre.order.id.validator:
        class: Eccube\Service\PurchaseFlow\Processor\PreOrderIdValidator
        arguments:
            - '@Eccube\Service\CartService'
        tags:
            - { name: eccube.purchase.processor, flow_type: shopping, priority: 100 }

    eccube.purchase.flow.purchase.processor.point.processor:
        class: Eccube\Service\PurchaseFlow\Processor\PointProcessor
        arguments:
            - '@doctrine.orm.default_entity_manager'
            - '@Eccube\Service\PointHelper'
        tags:
            - { name: eccube.purchase.processor, flow_type: shopping, priority: 90 }

    eccube.purchase.flow.purchase.processor.stock.reduce.processor:
        class: Eccube\Service\PurchaseFlow\Processor\StockReduceProcessor
        arguments:
            - '@Eccube\Repository\ProductStockRepository'
            - '@doctrine.orm.default_entity_manager'
        tags:
            - { name: eccube.purchase.processor, flow_type: shopping, priority: 80 }

    eccube.purchase.flow.purchase.processor.customer.purchase.info.processor:
        class: Eccube\Service\PurchaseFlow\Processor\CustomerPurchaseInfoProcessor
        tags:
            - { name: eccube.purchase.processor, flow_type: shopping, priority: 70 }

    eccube.purchase.flow.purchase.processor.order.update.processor:
        class: Eccube\Service\PurchaseFlow\Processor\OrderUpdateProcessor
        arguments:
            - '@Eccube\Repository\Master\OrderStatusRepository'
        tags:
            - { name: eccube.purchase.processor, flow_type: shopping, priority: 60 }

    eccube.purchase.flow.purchase.processor.stock.diff.processor:
        class: Eccube\Service\PurchaseFlow\Processor\StockDiffProcessor
        arguments:
            - '@Eccube\Repository\ProductClassRepository'
        tags:
            - { name: eccube.purchase.processor, flow_type: order, priority: 100 }

    eccube.purchase.flow.purchase.processor.point.diff.processor:
        class: Eccube\Service\PurchaseFlow\Processor\PointDiffProcessor
        arguments:
            - '@doctrine.orm.default_entity_manager'
            - '@Eccube\Service\PointHelper'
        tags:
            - { name: eccube.purchase.processor, flow_type: order, priority: 90 }

{#
This file is part of EC-CUBE

Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.

http://www.ec-cube.co.jp/

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}
{% extends 'default_frame.twig' %}

{% set body_class = 'product_page' %}

{% block javascript %}
    <script>
        eccube.productsClassCategories = {
            {% for Product in pagination %}
            "{{ Product.id|escape('js') }}": {{ class_categories_as_json(Product)|raw }}{% if loop.last == false %}, {% endif %}
            {% endfor %}
        };

        $(function() {

            // 表示件数を変更
            $('.disp-number').change(function() {
                var dispNumber = $(this).val();
                $('#disp_number').val(dispNumber);
                $('#pageno').val(1);
                $("#form1").submit();
            });

            // 並び順を変更
            $('.order-by').change(function() {
                var orderBy = $(this).val();
                $('#orderby').val(orderBy);
                $('#pageno').val(1);
                $("#form1").submit();
            });

            $('.add-cart').on('click', function(e) {
                var $form = $(this).closest('form');;

                // 個数フォームのチェック
                var $quantity = $form.parent().find('.quantity');
                if ($quantity.val() < 1) {
                    $quantity[0].setCustomValidity('{{ 'front.product.invalid_quantity'|trans }}');
                    setTimeout(function() {
                        loadingOverlay('hide');
                    }, 100);
                    return true;
                } else {
                    $quantity[0].setCustomValidity('');
                }
                e.preventDefault();
                $.ajax({
                    url: $form.attr('action'),
                    type: $form.attr('method'),
                    data: $form.serialize(),
                    dataType: 'json',
                    beforeSend: function(xhr, settings) {
                        // Buttonを無効にする
                        $('.add-cart').prop('disabled', true);
                    }
                }).done(function(data) {
                    // レスポンス内のメッセージをalertで表示
                    $.each(data.messages, function() {
                        $('#modal-body').html(this);
                    });

                    // Open modal
                    $('#eccube-modal').modal('show');
                    
                    // カートブロックを更新する
                    $.ajax({
                        url: '{{ url('block_cart') }}',
                        type: 'GET',
                        dataType: 'html'
                    }).done(function(html) {
                        $('.mini-cart-wrapper').html(html);
                    });
                }).fail(function(data) {
                    alert('{{ 'front.product.add_cart_error'|trans }}');
                }).always(function(data) {
                    // Buttonを有効にする
                    $('.add-cart').prop('disabled', false);
                });
            });
        });
    </script>
{% endblock %}

{% block main %}
    {% if search_form.category_id.vars.errors|length > 0 %}
        <div class="mt-3">
            {% include "Components/error.twig" with {'message': 'front.product.search__category_not_found'} %}
        </div>
    {% else %}
        <form name="form1" id="form1" method="get" action="?" class="mt-3">
            {% for item in search_form %}
                <input type="hidden" id="{{ item.vars.id }}"
                        name="{{ item.vars.full_name }}"
                        {% if item.vars.value is not empty %}value="{{ item.vars.value }}" {% endif %}/>
            {% endfor %}
        </form>

        {# Breadcrumb #}
        {% include "Components/product/breadcrumb.twig" with {'breadcrumb': Category} %}
        
        {# Sort #}
        {% include "Components/product/sort.twig" with {'pagination': pagination, 'class': ' p-0 mb-3 border-bottom pb-3'} %}

        {% if pagination.totalItemCount > 0 %}
            <div id="product-list" class="row">
                {% for Product in pagination %}
                    <div class="product-item col-sm-6 col-md-6 col-lg-3">
                        <div class="card mb-4">
                            {# Image #}
                            {% include "Components/product/image.twig" with {'product': Product, 'type': 'link'} %}

                            <div class="card-body p-3 position-relative">
                                {# Name #}
                                {% include "Components/product/name.twig" with {'product': Product} %}
                                
                                {# Product Description #}
                                {% include "Components/product/description_list.twig" with {'product': Product, 'truncate': true, 'class': 'bg-light p-2 my-2'} %}

                                {# Price #}
                                {% include "Components/product/price.twig" with {'product': Product, type: 'list'} %}
                                
                            </div>
                            {% if Product.stock_find %}
                                {% set form = forms[Product.id] %}
                                <form class="card-footer p-3" name="form{{ Product.id }}" id="productForm{{ Product.id }}" action="{{ url('product_add_cart', {id:Product.id}) }}" method="post">
                                    <div class="mb-3">
                                        {% if form.classcategory_id1 is defined %}
                                            <div class="product-options mb-2">
                                                {{ form_widget(form.classcategory_id1, {'attr': {'class': 'classcategory_id1'}}) }}
                                                {{ form_errors(form.classcategory_id1) }}
                                            </div>
                                            {% if form.classcategory_id2 is defined %}
                                                <div class="product-options mb-2">
                                                    {{ form_widget(form.classcategory_id2, {'attr': {'class': 'classcategory_id2'}}) }}
                                                    {{ form_errors(form.classcategory_id2) }}
                                                </div>
                                            {% endif %}
                                        {% endif %}
                                        <div class="product-quantity">
                                            {{ form_label(form.quantity, 'common.quantity') }}
                                            {{ form_widget(form.quantity, {'attr': {'class': 'quantity'}}) }}
                                            {{ form_errors(form.quantity) }}
                                        </div>
                                    </div>
                                    <button aria-label="{{ 'front.product.add_cart'|trans }}" type="submit" class="btn btn-primary btn-block add-cart" data-cartid="{{ Product.id }}" form="productForm{{ Product.id }}">
                                        {{ 'front.product.add_cart'|trans }}
                                    </button>
                                    {{ form_rest(form) }}
                                </form>
                            {% else %}
                                <div class="card-footer p-3">
                                    <button type="button" class="btn btn-block btn-primary" disabled="disabled">
                                        {{ 'front.product.out_of_stock'|trans }}
                                    </button>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                {% endfor %}
            </div>
            {% include "Components/product/modal.twig" %}
            {% include "pager.twig" with {'pages': pagination.paginationData, 'class': 'mb-4'} %}
        {% endif %}
    {% endif %}
{% endblock %}
